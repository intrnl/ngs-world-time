<script context='module'>
	import * as fns from 'date-fns/esm';
	import { utcToZonedTime } from 'date-fns-tz/esm';
	import format from 'intl-dateformat';

	function interval (ms, signal, callback) {
		const start = document.timeline ? document.timeline.currentTime : performance.now();

		function frame (time) {
			if (signal.aborted) {
				return;
			}

			callback(time);
			schedule(time);
		}

		function schedule (time) {
			const elapsed = time - start;
			const rounded_elapsed = Math.round(elapsed / ms) * ms;
			const target = start + rounded_elapsed + ms;
			const delay = target - performance.now();

			setTimeout(() => requestAnimationFrame(frame), delay);
		}

		schedule(start);
	}

	function calculate_time (from, time, hours) {
		let start = fns.startOfHour(fns.setHours(time, hours));

		if (start <= time) {
			start = fns.addDays(start, 1);
		}

		return fns.addSeconds(from, fns.differenceInSeconds(start, time) / 30);
	}

	function leftpad (value, pad, amount) {
		return ('' + value).padStart(amount, pad);
	}

	function diff_format (start, end) {
		const { minutes, seconds } = fns.intervalToDuration({ start, end });
		return `${leftpad(minutes, '0', 2)}:${leftpad(seconds, '0', 2)}`;
	}
</script>

<script>
	import { onMount } from '@intrnl/velvet';

	let now = Date.now();

	let time = 0;
	let morning = 0;
	let night = 0;
	let icon = '#icon-sun';

	$: {
		const zoned = utcToZonedTime(now, '-07:00');
		const diff = fns.differenceInSeconds(zoned, fns.subMinutes(fns.startOfDay(zoned), 38));

		const ingame = fns.addSeconds(fns.startOfDay(now), diff % 2880 * 30);
		const hour = fns.getHours(ingame);

		time = ingame;
		morning = calculate_time(now, time, 6);
		night = calculate_time(now, time, 20);
		icon = hour < 6 || hour >= 20 ? '#icon-moon' : '#icon-sun';
	};

	onMount(() => {
		const controller = new AbortController();
		interval(1000, controller.signal, () => now = Date.now());

		return () => controller.abort();
	});
</script>

<h3>NGS World Time</h3>

<table>
	<thead>
		<tr>
			<th>Current time:</th>
			<td>
				<span>{format(time, 'hh:mm A', { locale: 'en' })}</span>
				<svg><use href={icon} /></svg>
			</td>
		</tr>
	</thead>
	<tbody>
		<tr>
			<th>Day (06:00 AM):</th>
			<td>
				<small>(in {diff_format(now, morning)})</small>
				<span>{format(morning, 'hh:mm A', { locale: 'en' })}</span>
			</td>
		</tr>
		<tr>
			<th>Night (08:00 PM):</th>
			<td>
				<small>(in {diff_format(now, night)})</small>
				<span>{format(night, 'hh:mm A', { locale: 'en' })}</span>
			</td>
		</tr>
		<tr>
		</tr>
	<tbody>
</table>

<hr>

<a href='https://codeberg.org/intrnl/ngs-world-time' target='_blank'>source code</a>

<svg>
	<symbol id='icon-sun' viewBox='0 0 20 20' fill='currentColor'>
		<path d='M10 2a.75.75 0 01.75.75v1.5a.75.75 0 01-1.5 0v-1.5A.75.75 0 0110 2zM10 15a.75.75 0 01.75.75v1.5a.75.75 0 01-1.5 0v-1.5A.75.75 0 0110 15zM10 7a3 3 0 100 6 3 3 0 000-6zM15.657 5.404a.75.75 0 10-1.06-1.06l-1.061 1.06a.75.75 0 001.06 1.06l1.06-1.06zM6.464 14.596a.75.75 0 10-1.06-1.06l-1.06 1.06a.75.75 0 001.06 1.06l1.06-1.06zM18 10a.75.75 0 01-.75.75h-1.5a.75.75 0 010-1.5h1.5A.75.75 0 0118 10zM5 10a.75.75 0 01-.75.75h-1.5a.75.75 0 010-1.5h1.5A.75.75 0 015 10zM14.596 15.657a.75.75 0 001.06-1.06l-1.06-1.061a.75.75 0 10-1.06 1.06l1.06 1.06zM5.404 6.464a.75.75 0 001.06-1.06l-1.06-1.06a.75.75 0 10-1.061 1.06l1.06 1.06z' />
	</symbol>
	<symbol id='icon-moon' viewBox='0 0 20 20' fill='currentColor'>
		<path fill-rule='evenodd' d='M7.455 2.004a.75.75 0 01.26.77 7 7 0 009.958 7.967.75.75 0 011.067.853A8.5 8.5 0 116.647 1.921a.75.75 0 01.808.083z' clip-rule='evenodd' />
	</symbol>
</svg>

<style>
	*, *::before, *::after {
		box-sizing: border-box;
	}

	h3 {
		margin-top: 0;
		margin-bottom: 16px;
	}

	table {
		width: 100%;
		border-collapse: collapse;
		margin: -8px 0;
	}

	table th {
		text-align: left;
	}

	table td {
		text-align: right;
	}

	table :is(th, td) {
		padding: 8px 0;
	}

	hr {
		border: 0;
		border-top: 1px solid GrayText;
		margin: 16px 0;
	}

	a {
		text-decoration: none;
	}
	a:hover {
		text-decoration: underline;
	}

	small {
		font-size: inherit;
		color: GrayText;
		margin-right: 8px;
	}

	svg {
		height: 18px;
		width: 18px;
		vertical-align: -3px;
		margin-left: 4px;
	}
</style>
